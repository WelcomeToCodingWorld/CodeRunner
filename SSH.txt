//checking for existing ssh keys 
ls -al ~/.ssh/

1.Paste the text below, substituting in your GitHub email address.
ssh-keygen -t rsa -b 4096 -C "747852289@qq.com"
//This creates a new ssh key, using the provided email as a label.

2.When you're prompted to "Enter a file in which to save the key," press Enter. This accepts the default file location.

3.At the prompt, type a secure passphrase. For more information, see "Working with SSH key passphrases". 

/*

//secure your ssh keys with a passphrase
With SSH keys, if someone gains access to your computer, they also gain access to every system that uses that key. To add an extra layer of security, you can add a passphrase to your SSH key. You can use ssh-agent to securely save your passphrase so you don't have to reenter it.

//change the passphrase for an existing private key
You can change the passphrase for an existing private key without regenerating the keypair by typing the following command:
ssh-keygen -p

If your key already has a passphrase, you will be prompted to enter it before you can change to a new passphrase.

//save the passphrase with keychain to avoid  entering it again
The first time you use your key, you will be prompted to enter your passphrase. If you choose to save the passphrase with your keychain, you won't have to enter it again.

//with a different named key or using sierra and later,adding key to agent and storing in keychain are allowed. 
If you have a private key with a different name, or if you're using macOS Sierra and later, you can add your key to the agent and store your passphrase in the keychain by typing ssh-add -K path/to/my_key. Use the default macOS ssh-add command, and not one installed by macports, homebrew, or some other external source.

ssh-add -K path/to/my_key

//Sierra 10.12.2 and later,to allow keys to loaded automatically into ssh-agent and stored in keychain.
On Sierra 10.12.2 and later, you may need to modify your ~/.ssh/config file to allow keys to be automatically loaded into ssh-agent and stored in your keychain:

Host *
	AddKeysToAgent yes
	UseKeychain yes
	IdentityFile ~/.ssh/id_rsa
*/


/*
ssh-agent
1.Start the ssh-agent in the background:
eval "$(ssh-agent -s)"

2.Add your SSH key to the ssh-agent. If you are using an existing SSH key rather than generating a new SSH key, you'll need to replace id_rsa in the command with the name of your existing private key file:

ssh-add -K ~/.ssh/id_rsa
*/


/*
Testing your SSH connection

ssh -T git@github.com
*/


